<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">


	<!-- 读取数据库配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"></property>
	</bean>
	<!-- 配置dbcp数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>


	<!-- 配置回话工厂 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations">
			<list>
				<value>com/mapper/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- 配置Mapper扫描器批量成接口实现类代理对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- basePackage指定要扫描的包，可以指定多个包，包与包之间用 ，/； 号隔开 -->
		<property name="basePackage" value="com.dao"></property>
	</bean>

	<!-- 配置Biz 使用注解配置后此方法便不需要但是需要扫描注解 -->
	<!-- <bean id="teaBiz" class="com.biz.impl.TeacherBizImpl"> <property name="teaDao" 
		ref="teacherDao"/> </bean> -->

	<context:component-scan base-package="com"></context:component-scan>


	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 通知 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.biz..*.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="serviceMethod" />
	</aop:config>




















	<!-- <bean id="BuleAndWhitePrinter" class="com.demo.BuleAndWhitePrinter"></bean> 
		<bean id="ColerPrinter" class="com.demo.ColerPrinter"></bean> <bean id="computer" 
		class="com.demo.Computer"> <property name="printable" ref="ColerPrinter"></property> 
		</bean> <bean id="teaDao" class="com.dao.TeacherDaoImpl"></bean> 切面类通知 <bean 
		id="myAspect" class="com.advice.myAspect"></bean> <aop:config> <aop:pointcut 
		expression="execution( * com.dao.TeacherDaoImpl.insert(..))" id="pt1"/> <aop:pointcut 
		expression="execution( * com.dao.TeacherDaoImpl.getAll(..))" id="pt2"/> <aop:aspect 
		ref="myAspect"> 前置通知 <aop:before method="checkPri" pointcut-ref="pt1"/> 后置通知 
		<aop:after-returning method="writeLog" pointcut-ref="pt1" returning="result"/> 
		</aop:aspect> </aop:config> -->



</beans>